name: Perform deploy
on:
  workflow_dispatch:
    inputs:
      deployVersion:
        description: Docker tag to deploy
        required: true
env:
  APP_NAME: vaadin-demo-bakery-app

jobs:
  deploy:
    name: Deploy project
    environment: Develop
    env:
      ENVIRONMENT: Develop
    runs-on: ubuntu-20.04
    permissions: read-all
    steps:
      - name: check tag existance
        id: check_existence
        run: |  
          REPOSITORY_ID=$(echo ${{ github.repository_owner }}/${APP_NAME}  | tr '[A-Z]' '[a-z]')
          IMAGE_ID=$(echo ghcr.io/${REPOSITORY_ID}| tr '[A-Z]' '[a-z]')
          VERSION=$(echo ${{ github.event.inputs.deployVersion }} | tr '[A-Z]' '[a-z]')
          REPOSITORY_TOKEN=$(curl -u ${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }} https://ghcr.io/token\?scope\="repository:${REPOSITORY_ID}:pull" | jq -r .token)
          
          echo https://ghcr.io/v2/${IMAGE_ID}/manifests/${VERSION}
          curl --head --fail -H "Authorization: Bearer ${REPOSITORY_TOKEN}" https://ghcr.io/v2/${IMAGE_ID}/manifests/${VERSION}
          echo "IMAGE_FULL_ID=${IMAGE_ID}:${VERSION}"
          echo "IMAGE_FULL_ID=${IMAGE_ID}:${VERSION}" >> $GITHUB_ENV
      
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
    
      - name: Set kubeconfig
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Fill config k8s secret
        run: |
          echo "${MAIN_SECRET}" > ./manifests/base/main-secret.yaml
        env:
          MAIN_SECRET: '${{ secrets.MAIN_SECRET }}'
        
      - name: Generate environment manifests
        run: kubectl kustomize ./manifests/${ENVIRONMENT}/ > ./manifests.result.yaml
        
      - name: Show generated environment manifests
        run: cat manifests.result.yaml
        
      - name: Deploy to k8s
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          manifests: |
            manifests.result.yaml
          images: ${{ env.IMAGE_FULL_ID }}
